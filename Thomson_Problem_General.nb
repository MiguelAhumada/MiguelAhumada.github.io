(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    149920,       3074]
NotebookOptionsPosition[    147571,       2990]
NotebookOutlinePosition[    147907,       3005]
CellTagsIndexPosition[    147864,       3002]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Thomson Problem", "Title",
 CellChangeTimes->{{3.716215406221774*^9, 3.716215411928143*^9}},
 TextAlignment->Center],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dgt", "=", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     SuperscriptBox["10", 
      RowBox[{"-", "1"}]], ",", "dgt"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Kappa]", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"4", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "1"}]]}], ",", "dgt"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.716215428615584*^9, 3.7162154286163282`*^9}, {
   3.716227149578614*^9, 3.716227166930228*^9}, {3.716227386841713*^9, 
   3.716227387026273*^9}, {3.7162274881605587`*^9, 3.7162274883212833`*^9}, 
   3.7162277070834923`*^9, {3.7162277658851223`*^9, 3.716227767102405*^9}, {
   3.716228274416769*^9, 3.716228274723126*^9}, {3.716229080667232*^9, 
   3.71622908090379*^9}, {3.716229350899274*^9, 3.716229352485753*^9}, {
   3.716229552314567*^9, 3.71622955253479*^9}, {3.716235988436165*^9, 
   3.716235989445332*^9}, 3.7162365503471413`*^9, {3.716237575541854*^9, 
   3.7162375822388973`*^9}, {3.716237649265785*^9, 3.716237659194202*^9}, {
   3.7162377792222967`*^9, 3.716237815512107*^9}, {3.716237848595269*^9, 
   3.716237875298584*^9}, 3.7162382837314577`*^9, {3.716238366673937*^9, 
   3.716238420844843*^9}, {3.71623908931253*^9, 3.716239089467279*^9}, {
   3.7162393278666067`*^9, 3.716239349781289*^9}, {3.716241025275083*^9, 
   3.7162410264423113`*^9}, {3.716241062618703*^9, 3.716241062707233*^9}, {
   3.716241471350679*^9, 3.716241471531777*^9}, 3.716243239594191*^9, {
   3.7162433807901573`*^9, 3.716243380947823*^9}, {3.716243413175681*^9, 
   3.71624341360924*^9}, {3.716286673965967*^9, 3.71628667565176*^9}, {
   3.716292616156762*^9, 3.7162926300656357`*^9}, {3.716331939489317*^9, 
   3.716331940141768*^9}}],

Cell[CellGroupData[{

Cell["Initial condition", "Subsection",
 CellChangeTimes->{{3.7162155305599937`*^9, 3.716215539126766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "the", " ", "initial", " ", "positions", " ", "are", " ", 
    "generated", " ", "randomly"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]0", "[", "i", "]"}], "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "Pi"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "dgt"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Phi]0", "[", "i", "]"}], "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "dgt"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r0", "[", "i", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]0", "[", "i", "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]0", "[", "i", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]0", "[", "i", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Phi]0", "[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]0", "[", "i", "]"}], "]"}]}], "}"}]}], ";"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "the", " ", "initial", " ", "velocities", " ", "are", " ", 
     "generated", " ", "randomly"}], "*)"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"v\[Theta]0", "[", "i", "]"}], "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "dgt"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"v\[Phi]0", "[", "i", "]"}], "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "dgt"}]}], "]"}]}], ";"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"initialpositions", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"r0", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", " ", "for", " ", "the", " ", "initial", " ", "state"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"m1", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"initialpositions", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"PointSize", "[", "0.02", "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"m2", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Opacity", "[", ".1", "]"}], ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "1"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"m3", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"m2", ",", "m1"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.716215542183044*^9, 3.716215592569085*^9}, {
  3.716215639962967*^9, 3.716215705199181*^9}, {3.716227645770692*^9, 
  3.71622768490653*^9}, {3.7164878110284567`*^9, 3.716487813042695*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0], Opacity[0.1], SphereBox[{0, 0, 0}]}, 
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[0.02], 
    Point3DBox[{{
     0.28741513525378387`, -0.2654962359191137, -0.9202740291564417}, {
     0.5011126867937469, 0.7986538584767103, -0.33322378287663523`}, {
     0.012493048327427392`, 0.0030024595210710655`, -0.9999174510829946}, {
     0.09058497361020904, -0.30828895281584556`, -0.9469700545042314}, \
{-0.007554946921100653, -0.09989986638251334, -0.9949688133171689}, {
     0.5416094877427635, -0.7881834446254898, 0.2922773005303674}}]}},
  Axes->True,
  ImageSize->{360., 399.06753703431633`},
  PlotRange->1,
  ViewPoint->{2.2364568597568537`, -2.135940513138854, 1.373324010850551},
  ViewVertical->{0.28768395263982416`, -0.01948186831210357, 
   0.957527232093478}]], "Output",
 CellChangeTimes->{
  3.716236801951768*^9, 3.716237588886634*^9, 3.7162376664025383`*^9, 
   3.716237883255651*^9, 3.7162379444811783`*^9, 3.71623828662606*^9, 
   3.71623844759515*^9, 3.716239093370962*^9, {3.7162393309010572`*^9, 
   3.716239353234171*^9}, {3.716240986525193*^9, 3.716241067258114*^9}, 
   3.7162411417076387`*^9, 3.716241184303548*^9, 3.71624147537961*^9, 
   3.716241571379842*^9, 3.716243243916093*^9, 3.716243277663987*^9, 
   3.716243383926195*^9, 3.71624341805077*^9, 3.7162864258775063`*^9, 
   3.716286683146089*^9, 3.71629263263863*^9, 3.7163319472597227`*^9, {
   3.716487806222075*^9, 
   3.7164878138091917`*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXXmMVdUdfs6bGVZhZNhkgJlhYGBgYNj3YViGYWTfEZFlZBEQEHVKBakg
stWgVERZkkrTVhsbjIlLov/ZFtM0qTZG43+apnH5w0SNu3G5fec75/7ufY/v
nPvuewPWRhLue3Puud/3nd/Zfme55y1oad26eWdL67aNLRVz7mzZvXXbxrsq
mm6/MxWUvCaRuGZr6v/JioT67iUS/gX/tqmL+ePn7z/573/DR2fvqaee8i5d
uuT5/06cOCF/v/vuu97hw4e9/fv3e+fOnfO++uqrc+6nP/74YxXL+/bbb72j
R496b775pvfDDz94Fy9e9J599tm0p5Php1N/qWs776OPPvIOHjzoff3110B8
//33gZRCTJyNfvy9997zjhw5AgHqXwgum8cVW+bjBw4cwOPdcrPYPs36F3wU
eq+88or34osvek888YR6qtAQK8MZIkm2EWIljjB2BvGXX34J0l27dgXExXj4
2LFj3ltvvSUPP/fcc+2NWT799FMkprW1NVGAa9Lbu3ev9+GHH4YMFz8r92px
fzUPKOann35aQSSKEFbkffDBB97x48dBf/78eeRBaY5Zb+j+k2PWm8f/nXse
ZiDEywyTk6+rjwJvy5YtXWKazQD8S30UKYDTOuCf6qNQBRQYxNRXaE99Jh7R
kf6hPnDHp/Aj+f9U5FM68t8lcrsMRPVXJov666R+8JI8mCSRCkkYi/eQBnsU
H11YdUS8cJV94403kGsqzpkzZ7wvvviiv2i5NkstD2pebdauthqJuH6t/fzz
z719+/Z577zzDuK88MIL3uOPP57oK7nclRAVy900SndlKzBxFOXLL7/sfffd
d4jzySefINkpOYnekmaWSZ1JWFFGmCoFGaJcVbLYPK5EKDsoET1ERHdC2J6E
PZBO6KrEvhW++eYb7+zZs97bb78NSzzzzDPeqVOnvO+//163L2DoScg6kLBf
pwtwtQEFJgeVOFUqT548iZQrMZ999tl1wq2Ltk+jrZJB24mEHQ9LsTYmfvG9
cOGC9/rraFMSoC4Iqng6bikJYwXimObXlY83RIXm3quvvupt377d27lzJ/4/
9thjGhKI/Qg4q4lHNeFF9YFWrJxE6iJpM9H/LAGsJvfNgltlkQH7k4geSB68
joTdrx/8o4iuJpG6kbBD+sHfO+VXkTCWf/dpsAsinzXXA0gYq5gHNdhvBWw4
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Euler-Lagrange Equations", "Subsection",
 CellChangeTimes->{{3.716223944497661*^9, 3.7162239499708652`*^9}, {
  3.716308843164619*^9, 3.716308845149351*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Euler", "-", 
    RowBox[{"Lagrange", " ", "Equation", " ", "for", " ", "\[Theta]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"table1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Theta]", "i"], "''"}], "[", "t", "]"}], "-", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Phi]", "i"], "'"}], "[", "t", "]"}], ")"}], 
             "2"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], "*", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[NotEqual]", "j"}], ",", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"4", 
                  SqrtBox["2"]}]], " ", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "j"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "i"], "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "j"], "[", "t", "]"}]}], "]"}]}], 
                    "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "j"], "[", "t", "]"}], "]"}]}]}],
                    ")"}], "/", 
                  RowBox[{"(", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "j"], "[", "t", "]"}], "]"}]}], 
                    "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "j"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "i"], "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "j"], "[", "t", "]"}]}], "]"}]}], 
                    "+", "\[Delta]"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], ")"}]}], ")"}]}], ",", "0"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "+", 
           RowBox[{"\[Kappa]", "*", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "i"], "'"}], "[", "t", "]"}]}]}], 
          "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Theta]", "i"], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"\[Theta]0", "[", "i", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Theta]", "i"], "'"}], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"v\[Theta]0", "[", "i", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Euler", "-", 
     RowBox[{"Lagrange", " ", "Equation", " ", "for", " ", "\[Phi]"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"table2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["\[Phi]", "i"], "''"}], "[", "t", "]"}], "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"Sin", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], ")"}], 
             "2"]}], "+", 
           RowBox[{"2", "*", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Phi]", "i"], "'"}], "[", "t", "]"}], "*", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Theta]", "i"], "'"}], "[", "t", "]"}], "*", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[NotEqual]", "j"}], ",", 
               RowBox[{
                FractionBox["1", 
                 RowBox[{"4", 
                  SqrtBox["2"]}]], " ", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "j"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "i"], "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "j"], "[", "t", "]"}]}], "]"}]}], 
                   ")"}], "/", 
                  RowBox[{"(", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "j"], "[", "t", "]"}], "]"}]}], 
                    "-", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    SubscriptBox["\[Theta]", "j"], "[", "t", "]"}], "]"}], 
                    "*", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "i"], "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "j"], "[", "t", "]"}]}], "]"}]}], 
                    "+", "\[Delta]"}], ")"}], 
                    RowBox[{"3", "/", "2"}]], ")"}]}], ")"}]}], ",", "0"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "+", 
           RowBox[{"\[Kappa]", "*", 
            RowBox[{
             RowBox[{
              SubscriptBox["\[Phi]", "i"], "'"}], "[", "t", "]"}]}]}], 
          "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "i"], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"\[Phi]0", "[", "i", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "i"], "'"}], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"v\[Phi]0", "[", "i", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Vector", " ", "for", " ", "the", " ", "variables"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vars1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Theta]", "i"], "[", "t", "]"}], ",", 
         RowBox[{
          SubscriptBox["\[Phi]", "i"], "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"vars", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "vars1", "]"}], ",", "1"}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.716224063847509*^9, 3.7162241297936363`*^9}, 
   3.716224171925496*^9, {3.716224273017318*^9, 3.716224283357223*^9}, {
   3.7162243156479883`*^9, 3.71622431611882*^9}, {3.716224348832623*^9, 
   3.716224536811612*^9}, {3.716224619358323*^9, 3.716224669790977*^9}, {
   3.716224717156534*^9, 3.7162247190549917`*^9}, {3.7162249980876713`*^9, 
   3.716225023626576*^9}, {3.716225054214382*^9, 3.7162250974064417`*^9}, 
   3.716225679531013*^9, {3.716225715255458*^9, 3.716226039577456*^9}, {
   3.716226213998289*^9, 3.7162262312147903`*^9}, {3.716226535490959*^9, 
   3.716226553650922*^9}, {3.7162267417370167`*^9, 3.716226755972163*^9}, {
   3.7162268977198343`*^9, 3.716226941106818*^9}, {3.716227359881222*^9, 
   3.716227369143598*^9}, {3.7162274493884478`*^9, 3.716227455080372*^9}, {
   3.7162280189763947`*^9, 3.716228080894063*^9}, {3.716228131309765*^9, 
   3.716228139220582*^9}, {3.716228475321085*^9, 3.716228477252481*^9}, {
   3.716309541544291*^9, 3.716309542676446*^9}, {3.716309579736024*^9, 
   3.716309604347801*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions ", "Subsection",
 CellChangeTimes->{{3.71622605992235*^9, 3.716226062579465*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"table1", ",", "table2"}], "}"}], ",", "vars", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "400"}], "}"}], ",", 
      RowBox[{"WorkingPrecision", "\[Rule]", "dgt"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "[", "t_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"vars", "/.", "g"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", "*", "k"}], "-", "1"}], "]"}], "]"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", "*", "k"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", "*", "k"}], "-", "1"}], "]"}], "]"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", "*", "k"}], "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"2", "*", "k"}], "-", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"trayectories", "=", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{"result", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "400"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"trayectories", ",", "m2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.716226090458302*^9, 3.716226090459691*^9}, {
   3.7162262482740107`*^9, 3.716226248416499*^9}, {3.716227261687158*^9, 
   3.716227265328148*^9}, {3.716236559307869*^9, 3.716236602878153*^9}, {
   3.716236767994293*^9, 3.716236771562579*^9}, {3.71623739904672*^9, 
   3.716237403638463*^9}, {3.716237541649878*^9, 3.716237543057805*^9}, {
   3.716237939955534*^9, 3.716237941521976*^9}, {3.716238439002976*^9, 
   3.716238443031555*^9}, {3.716238585350649*^9, 3.716238600740505*^9}, 
   3.7162387215198402`*^9, {3.7162411359573393`*^9, 3.716241138203863*^9}, {
   3.716310813917515*^9, 3.716310818203885*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1: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
3pXLnLnh/wcEAqve
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1: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
0pxY9/8Bu1ZJkw==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1: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
wVQflZvhtpAUhf8BtOpniQ==
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1:eJwd13c81d8fB3ArI6kQopRdMhtExtsIkSghlCipUFRklZUimrjmRXYiM5R5
rIwKIfS1Pva6V0SRVb9zf3/dx+P5uI9zzud13p/zPh/hyy4m9gx0dHSF9HR0
jPiXyd7bwkxiGOxvUc7Epg7DReo9vST3MXDwN/yu3TsM0Q1POPrXRsFe1O9c
ts8w9GYcahL7MwyT484WaVwToH0iTp5TYwAi3h5jv/5yGNxfvb/fPjsJ2d0Q
njLVAxWPJhLdiobgZEejo0f4NASYPdXz3dEJIZeuCMdQBuH0wdXnR5koIEkS
iMnNb4Ea8UZRs899sGxm6auuQwUu8Uznz/4NwEbn0lEk+R04vt5nI5nPgmzj
Gp1iWjXsfNmUxLrvG2RpTTpHKf0Apv4js2kKH2CXFt3Furo28B8sC/Gk/ICx
4/utZ0sKIFIwMEhstgHWb6Sup7nMga5ptM/2c9nQfEFP8d1qOUiO/9NlaJiD
dN46Vpe218AhVfxc/lEalN/JnOOan4OEmbzfDLcyYVfFkJ/7pngE9Dc3/szN
QX2G+JmrTW+Br1iTMS7sPRq7O9J/tWkOFAq12VcPFgKbdE6uW0Idyjr451Lw
/TnQFvB2nb36HjpLtqvmzHxC/87tPTe2bQ7cAvetMH6qBKZXSfsrv35F9U6h
pNNBP2BV//LrI+G1QB9A3njV14n4G3xLukdnwVBjs9Z6UgOcrX/R+3vxOyo9
vFwkbU+F7S/+M5F90AYnRESMXvzrRS7ROkqNYRSgf5O+2sXdAeq3fkbklvQj
NboK3Y2SGci3VHBwc/wGnbFo58XDBBpd7Fg/tDEFkiOQ5/f3O0xWHKlkoR9C
TO8i7eclpuD6v90TTlJ9UHM0gXJEbwgF3uIri7KahJLi2H9qKgNQ6V7K+NNl
CF0Q/MHRR56AMIGk31n7CIg9wbH1jt8Qiti2IPBvdhwSvu86FXt3CPIC/R6a
eA+hIJsM4fKz4/DDgJ/3ucYwWAvt43G3H0IU+u4hqbYxsD36LOP9wjAMO5+b
GNEZQhUDcve+XhoDfcu5VZfQEZBW7RCNFxpCe0YDkl9sGQOGDj9zC+ZR4DMf
efP7F4Fqm9zsa9tGoYf6mcHAfhT0JNutufIJtPPZAbZD2aMQ2KHJa5YxCo/p
jvPnexPI+ZHaClPiKPTX26t0N42C7eYuy+nzBPI03dg0iv+nee8rj+aXUTCJ
mXz/xIJAhuvl0op1o5BdLDt/pgDPQy+vsN2NQFMvveoezY8CoUxHsvIcBc5g
0Wf1eQTyUi2z+C41Blu32cSdEhmF0XA2uTebhtDv2Jd/KbfHYHsj+fz9/BHw
e9Fp7a81hOS6ecvk0BgoeA3vqxEbgY1c+lelT4eQIrMrs/H2cQh6u/uEYQDO
p2Z1tVljGInYPtVqLBiHDxlmmdOrBIxsiw+rTh9GbanWpf+tj0Mn44vRTzqD
oBLhwVK6dQT1lCUfs9ScgO69jDOKnv0wtfsXy9PRETRoUvDoeMEE5JxZy+jK
+Q7NC/5XQ0+OIpv8hl8yfRPwwbyLta+yG6qfG3wcyxtFH/VuB95Ym4DMIvHf
Ta3fQKs+p9Zr2xh6VbYcq8Y1CWcXWD0VJzrgXv/2lDsOY+iK1EV6GaFJYGUS
vXmMrR0krPLm1SvH0OT537cZJCbhr2CHzTvPVjiVVi3zdPM42jz1xy1fbBI6
5a5bbTB/hslaswMqZ8aRmRGTj47gJEDsKe25ukZQouOPNQ0bR4Tl+bTB7ZMg
2+nBT1dcD5wPb7cyfR5HPpuN12LpJqGHU6rKfLAG9o/Vajz+O45erXXtC5ud
AFYFqwL3oCpIajjrq2s6gXbelAjQq8M5PBWRePe8GIaucNNfqptAlzYZUMPv
TkBbvkyRAkcq2HzZ52/eNYFesXVIG16dAJXx2iYzg0TYZ8fh/XRkAjnz/yae
W03AZfl9pb+ex0Ctk0GZCGUC8W5ptCk2mYBl5qboyS8kGI44N3dgbgJJp2Td
3zCagKJPH06ljoVD9pQEe9aPCVRfJKT81HgCRHL23WcqCoeFqI275OkJdNN1
LvuW6QSM+JS+ec9LAj6H9Bvp7RNIza4jdo/TBPzlNg6+uxwH50xCJNOr8PgX
X8gU3p+ACVezZ/u5kqDgKbvAZMYE0v5vN8ux8AnoWy8cshBOhQzZ6z0yDhPo
kwALu0XTBPSqHb29+2wWcHjxds2WjKMtW1O+yOJz4MrzJeVGu2KY2Ait+eE3
jpKZo1cZH01CziXz8rt33sMNHQE5Q51x1CBsmjRSMAmB+zatyd0qhcnIxRMh
DWNINyNCrmT7FBhXm3KO76qE/Ft5xw8FjqHpO3XcUlpTYPWw1c+2sgp2hJ8y
bVYbQ5Jc31cy3KYg4nz9FT+BajhVp9rxLHcU3Rg+0lnQNwUvZmQWY0/WgP9O
7ytp9qPIZ2VvS/W2aQhlNNrBXFUDjK1kFa/do+iUFJ1yl/Y09PscqO3gqQVK
ZZPU/c4RVOxiSM73mAaVsGfdISa1ICzmfYP3yQjakrKoy5s9DSlKXCXCbrXw
yCm5okB7BOkKdhxtGJiGK047bajetQAvAlLebAwj5s5Yz+BtM6A3nWIZca0W
Jn8un7IqHUaxQ+c4BDVmoPjp27JdKrWwha7RhctjGMkenGw57TIDE6ocpl+X
aoAj94eswNFhpB03mf0jfgaeLBkkqsfXwNefojIFK/g8tK6JbmiaAYcNn1BZ
mRqoOOX76XLwECIvBQ97C1Dw+bXQlMBfDTrj8o+/mQwhtS3CB7dpUOBG+JTt
2kIVFHIF/QgUHkKWppLpRnYU2Dp8U2cHuRIg2f/pdBiBsl1lWgNSKDCnGSd+
/n0ZyC6xaCdrE+js3JcwmyoK1C/2VC4eKQX/bXsy1dcHUWngiGtFDwUeqhbQ
Jee8B734+B86DwYR5z+u+ysMVHjzquPl5+Qi6PGbt0rrG0AH3OXRuhoVLHgf
tQct5YAxc7HLQPUAUrp+bSpajwoEt3TTkls2BDpWPL6WPYAe/Xydec2YCqp1
x2badr+Bjm9bkkfjBpAd0w+tMDMqdPUzCS3PZ4Cgo33nzPMBNOe9JUzFigpe
774Gn1xMg0FhivXO4AFkLxYs8sSaCqGrxeGCEqng0PZTbPnBACLf0rZ8Y0OF
axuiD3seJ4PTa95nu7BLR/wJL7OlAkPPbgXd3UmQclBShfPhAMrpesc5jv2L
I1cLPUqAVwHMlQ6PBxB186YcQ+z8NnWPWJLJsC9K370Ir2e5TeoXNx7/1lz3
u6r+WKhizFIIiRpAXOZeR87j9VRyagRPO8WANYPn4UevBpCld+V2jfNU3G9O
njPXj4ZXpRL62m8GkGEiC++QBRV2OAYid5co0Mv82+3xbgCd+TuweMacCkt1
99lDuyNB5Hep05fKAcRkpHcl9ywVxM++4TvrGQnHxx6abjQOoCflNfvZzlCB
SXi/8IFTkWBpEmWs2D6AiimJ2+KNqJD6QWXa1DASDvV07vnx3wBq/vyJ3sCQ
CpOBIh+TnSLBjTGri2dkAP3Teiu604AKxjJNJRtpkaASvtoePD2A+j9ufsR5
ggqbHInerIVISC9dkVSeH0BqbRH7j+lS4SnpqiS7cRSclpgKEV0aQIEfuD6S
jlOhhWtbBH9xFPBHqfE+/jeAdtgxhVE0qbBTRfDjekg0fNZbduBmHETu7c9U
xzWooOxUri80Hw3LD57lTW4aRFPmJ4u3Y7fa8viwn1EMVD5Z5O9jG0S9Sl8f
jahT4dvAFms0GQOf/bUvy7EPIuV5F7b72I1+jLOuCsZCR4nSy2NbBtFZ6W3v
pbGf8nfmZteOhZGx9lghjkFUvWvnGQqu24OdjjndZrHwn3RQL9vWQTTYS4zm
YD+3URa4+Wws7K16v8yzbRB5TmuzOGE36cylZ4NYEHeLZLPZPoikvmiU78Lu
HCIvMsofC2vpyr4SOwaRyv1rQwqqOM/Sm2vT5Bj8voh/7+PFz3W4dOiFChWq
m68JPNSJAd84xj+6AoOoqi58pvwYFX5tZZ+tGo6G7VOfBKNFB5FHW1GFixIV
2PWk76+sRkEa5aBDuuQg6keDWymKVHDda+mReD8Kxo+7D+fJD6KHWXSvRRSo
8LkigchcjYTfvddbfmgOIsULbieL5akw7mlbN/2bBCw8mipShoNITdrx5RZZ
KtD9EL2e40kCNfH3ua7nBtE9nw9vd0pRITlg34VwBhIsfPu3IHh7ENHr8usY
i1Fh6x5Wpf8UIuA7X8gNB79BdO4Oo76vEBXEHnbGS+N+Vyi3SzL8+SCia+kd
ctpNBftm4Vr61HCQeWzU+yxxEKHPRbsEdlJBjeeBaLNbOOQ9/M/reN4gUq9K
W3vOTQXtmvj+RKtw+BqxqYpUPYjMfBIXOrZS4dIDjicm5uEgdo8v50rHIHK9
LkamslGBnmrkOHs9HLS6VE3jxwbRi+kAgREmKhwQzTv6OzwcWHrs0jmWcW7e
junoHwVcm/OcjbvCISb8GV0GG4F8XYb4Q1cpIO+WXdQsFwGmrPtJarsJFDfL
dsTwNwWKr5XWWKdE4HvQ7cgZDQKJHTZR7p2hgEwq1/PyFhKcKrz0pMqEQBGn
DE0/jFMgwoJ3b8rDSCjOSrnJe4VAK6ouOvlDFMg6NLwifzoKvPW7v3Q+JBBv
1jlRLnzeXi5TPBe6JwZWkz6nspAItLcjria0gwL+nj86xnE9+5heqzZOIZA9
V5m6eisFvPPrpcwPxMFt9jy+/8oJdCA/N9ipgQLveTUN712OB95IaaPfDQQS
0eB78rOWAjw8HA1SIQkwcvXCjZmvBPqR+fd0A6KAVOfL3cZFiXA3uUZdYphA
jvN/VW6XUaCGQSJ3/FES2L2/csFhkkALbketDT5QIKfG4DqHQDJYB8yK3qAS
SNZlesGnhAKv/wtUs8lOhpVhvm8H5gmUYhfkv7WYguv5wAcjpRQo4uYSKFwg
0MzBc8Ir7yhgwxqTdaU6BaQCnm5mw/f8/QPdVFXsff5C50laqRAEZ4SOYP8v
J5K3t5ACQtSH4WcrU8HHUqNea5FAkkpHZr9gZ38QpicpnwbrW9/GHf+J+1ry
Yi0nHkeL/3flnbg0kNvvoa/wg0BO133o3mC/YW4pXLqRBs2RiRfPzhBIr8eM
eFREAdIFSuSNs+mgvuLO9W6cQCUttheT8frjUpOXniekg0H8oxDzIQJlMAym
reDn3a95MGRjIB2uXbF5adZLoMKVyGePcT6sQX759DsyoKaQuNXRSaDu389J
x3GeRT4HD5yFDKDfVODZ9IVApnt012UrKLAj5Gu6mG0GbHgfi734kUCzAlpF
qrgv2zyitFm7ZwBzRp97ciWBpKgqFIdqClR+5MtUfYDHT2RtJhcTCHVR/N7h
/WV9/X6lKTADjB6KjF3KIdBGRY4U90dchwlf9vjfy4Cwbb3JnOkE4rz2cLd/
IwUWRNP3vnbIgB3H69hK4gnExsQrttxMgTMnZEkHjDKgsuTo9fO4DkMbSVmu
XyjQQZa21DyQAR+Mbz7ciet2Obj6xYV2CrSPKe9pa06HmcdsU5r3CWRzac6u
tpMCGQEsoj+fp8OBrbw6pfh7SqrLcI6nmwJDARIRL06lg7QR07eSqwSq7tPn
8OrF942dTTIWZWlgqfpo72lbApG69i4H9FPgviDDe1bHNNBqPFdgY0WgAIXA
ZsdBCigO/s0S4k0DI0t/3V5jvH6vTVV9wxRIvjLYSb2aCjKrrIsWJwkU3zJv
aT1KgfjY2vCd+J5vrHjR2EqPQBL7pHxLxyignhm/3bkwBfjV6D734ffa0ax7
E8MkrvMuJu7hjWTovR/7xESdQEzezsLz2C/mJzJkpCdDSbzzJj1VAsmzazCX
TlHglvoAf6tRMsjZ3G/JPUag1E7uvTbTFDimRG9+ejUJ5K/w2d5XJtDaUknp
OPaP53ua9r9JArOlWrd8JXw+lL4mDPF5olgXvSR5Pgla+dmS9bBLt397GYmd
T8ZF2m17EhTdOqhzGPvC26awOuylqm5ZkRGvYLhSo8gBe+9h85D/sGeMh4v+
3foKfORvP5/Gnrt1YPt37KN7o183hyfCMfLvM5l4PXVCJ/hqsYucLm+y3ZsI
fVIJXDF4/SZfhr3I2FWzBao0ihMg94jzs3cq+Lt77ecXe+zLd2K6bEwT4Odz
Zf0lnMOFoUFHEeyB71pV89fjQeNCcAEtt2JOikoXfl6j2xnvduTGw+WXm55p
axKoYWzplhj2527Vn1r3xwMd8vWv0CIQ4+vNfxtxnhe21Nwp+UWGAmn9m/LH
CdR4y7rfEftme6fJ0CYyaAhOdy3r4nGUSZuK8L5wTLfP7wwig4Qj3Xc4QaDN
x11brLGHr137NedMhoWtKkku+rge7t0Z3YJdn05/KM+aDOlTP1LuGxCo/7ZL
Qv0EBazEVQr7TpMhz+FXnSuun5v0sXP+2KPoVrK0DMjgqbiw3dCQQDDF1XQc
e6nWmObhE2Sw/1jJt4Fdc2QbEzf2lWnbjmzsk+MLTWGnCBRu67cwifvCyQiX
aRUjMjTbNX9jMiKQV2Qw6SP22aHzp5rNyeBuA0fOYn959YN6DvbegaOPrG3J
oFPvyhCAfUUgdG8Cdt/geLe8m2Rgb6frfo6dpBRqH4mdbPB3h4kPGcLsBA39
sKcTim9ort33PpH6jAzCmXLHjbAv6HkKvsIezr7ni8krMjREP65ew+t0WH/c
WYBdIk9I5VgBGep63zhHYD9qoRL4Cfu3lE9tGXVkWO3/ocyL/f0tTvZp7CWb
l2a4u8lg7oE/f3AOlvOHVGk5yDzIjYiaIsPhuvHFApyn6m1GNlpunE9UPzav
kCGj8y7LDpx/DW+bTj725xsJqXM748HwfK7LIbxfa4ShLxW7cP0UdVYsHmay
H0ydxvtLtJVvksT7uE4NYo+Qiwc+NaHF2/i9vs+ydsYee6Xma3FVpXjo0jqc
EY3rhO1OBUsy9roB4GVSj4fdN0bFG3UIxMp//nEvdmQt55miGQ/yfcXsTNin
nTNqt+N629S/N95UOx7KKujKTXEd3lW6uKKJ3bZA9+20VjyMJal4V+LvqZmp
sZUb2AWDlursNOJB5pdphwr292/b3MKxk8Qv9tarxMMVQ6FNHbjObV7/V1WA
PVVHo/+QAn4uBvGmx9h5ncYVm7A32F9WdpGJh5PtLVqXsbMI7JHrwh45Ynah
EefAIG22eg67EydnYi/230ZsM6kC8cDi3KLrhL1VPZXzO/Z/rifEDLbFw6vC
5HvJ2E8bnWn9jJ166d7ZXMZ4UF0h0lawR/O8Zy/BPjys1k//hwyxi1qbXPD6
zcp/Qgz2rzfDm0spZJhWODNIh3NYKEx4cgc7p+BAoARBBgHvB0LuOLcljpr1
bdgTDxkX7mwkw/etX/rMcP6ffHYc/YZznmB3M7UvJwMnyx1PA7xfLxTpfcOx
/9D/U7o5nwzZGWJvL+N953hgc5Eeu8Pfcg8FMhmuXIMRIVy3VAX+4GJcb+Vu
Csq7PMmwg/3IEzN8/geUCL23xQ6dhfY9t8gw9CznzqPTBIqKHOHhwF5/Szdk
jyMZkvMGQjvxPS2K85eHIz7/SUGLJ1vwOVD3zi1/7iyBJhKD+XZjv/y5bS+n
BRkiSE+X6MwIdPLvQPFX3EfG2o7NB5iQ4Wm2RdEvc3w+Oynu18POtviZ4Y8u
Geh5igp7zhHoV6RzNyv2BzXqJ+k1yWC2vvlfvgWBPvCzyLaMUKDxS1uZpgoZ
xCBUSwb3NXvpQ8722GcbNnbdkiUD49BVjTbss043Xitj53k4MqGwjwwXVbI/
250nUKz11GtO7AbOuXeW95KhnK3jkeUFXCfLVwO+4j7Ykc03UrWNDMsyFp9L
sYdUMha+x35Zj9XRiRmfG8wnC9isCaRm9vdlKvbRkgS22vU4UHmyU1Yfe1qQ
oCQJu5qmeVbyQhxUiUZ4e2PnKd419Rj7j129T9sn4+D6tpljidgF/mxJDsDO
wsq+2bA/Dqpv1+sXYt/H3rLoiz1r/qDialscLOyh6hdjf3KyXJf2f4Gxpy3N
tXGwu1lLLAt7zahwfTD2D096934uigNp1b+GUdi1Kmu+vsTeU1n9wCAjDlql
XXVp61GS0z4Rj/3s0IFineg4kE3uuSaEnXme8Wwl9pcV8oIJ7nFAH7DbczfO
gafCM5gP5yZNt//NLtk4eB0TPNmN8ww/8MFCDrs2T7Xuz11xYHmvueUF9n0d
BTl62B2GBWwussUBX/RHenrs+sdWAj2xR6bmrjGPxcK3dnreVUvc7yqcqZ3Y
FabfHJSPiQUVvdjySuxqLCry09h/O/z76PAoFqQketYCsUum7XyzgV237vXs
9zuxIF0QWiyE/eDbd/3CuH5KZ78JnDeKBeaO9Msvcf2cbGHZYoX9I+eRgJ1s
sWDvz2t7F7vFWtBJe+wQaifV8CcGRNLDgy9hDzPmuuaMHeXkra1OxcAbd0Vr
fexZ2etj97CvXLUrG/8UA3evsnoB9uB3MuMBtHl1PdHlihhwUPpkchT7tAv5
dDB2wXPlmpq5MZApWvvnEHaz8HdPnmA/pz/ekpYUA7sKskYOY/8rILrvOfb1
Q8WXMyNigAohysrYqyxfX3qB/afekq1WcAwo7rEapc1rUJy57yV2R41U1qP3
YsBafsJXF/vdxYPjNN/9oafkoksMxE4vep/CPloi7BmGXaxZy63RLgYYkjL/
mGE3lREKpvmnTtvSKIsYKFsYQrbYub5IfKONU/pJkX7qVAwc/DOvcBP7fQWN
57T1SCqp+mRrx8DhnSe/e2E/yPhNjrZ+mfx+1RTlGPhyufluEPZss67Wp9i/
LmX/ypDDeTKf+ROO3duW5w4tB7eHVtMl4jEw7cs8nIVdICR07jH2/P8s2dS5
YoB3h3lDMfbhxAOTtDxf/a3l7GKNga9VYqkIe7qPzR6ac7v7msX9i4bTL7be
b8eesD7EHYTduN5um8BsNOz2NvjWi/21u4n7I+xenCJJH0ajYWbV+e8o9uji
QzMPsQtwzgar90bD+pNSBir2E3fYi2k+vJrC8fZrNGSGdzIsYI9ayuGhjfMq
RNfnX0M0fL+iXPqb9v8FdmHavFUX+vgOVUZDfYnjn2XsT1c+JNLWGRsSP6j4
LhrOars9XcUe4PGWPQQ7f1PVEM+baDhee8DmL3bPLi3RUOzjc/kf+xOjYXTx
015GXOcU9tYNmusc3VMZSIqG+Qt2PSzYybZTY7Q8i1JbM5dCoiGHWymAHfu7
DCeJZ9gP9ZH89/pFQ76bVCoHdobEG5O0/dr9CkrmXaPhxcDb8a3Y/zReWKbt
+0c9rlSX63idCswr27Gz/GDpCsfOe9C4qPpCNNgxyFTuwH5n3kaZhJ1asuG3
+Uw0+IQVqQpgv6C7XzgSexPhD0Y60fCD9zunMPaXyws5NGeV2c3sphwNZ9x+
ftiPveGBCXsUbV/+W1s7L4NzE1kZkcd+pIbblOY7+rRj54SiQbFwW5My9kIp
fw+aS66LDx/aEQ1jLhnax7G7lGXK0nz9a+ghE5Zo0EjfknIa+60SEUvavIpH
RUgPVqPgevd4+0XsoecHliOwW+RRjHtmo0BMXKPZGXvb2oVttOdtk5hROjEc
BTpHJHgfYI8Pa3Ki1X/PG49j+Z1R4Cr2+H40LU99UwVanV9Z2Zmw9jEKOigH
epqwy/3NZqHVT/eVWn62rCgwDpaSAtynDnll/ncT+zMj8l5t1yjISqhson2v
2XU2ml/DrjeUr8VxNQoKGh69e4Cd5zyfuC32zffGTTYsoqCztWbPV+yfkpof
GGN34fadOwdR8Il0JNgZn7cPgtfTpbHvrdDnz9kaBUeONyhHYn+tarlNDLth
f0sUD2MUrNZYj1RgXww8J7qLlg/9y5/Ny5GwIb6lfis+/22Tn9vS+nITJYtf
aCQSvOKdJVKwz7iKsk7ic5ifMXig7EMk8GipztXSXOd8DYHdSLYoszo3ErqI
xboR7M05V/O/Y++fSp3iSI8E092GtXtw3/lnm+r8GXt9m/kmh/BIiLdKyguk
9dPDTXIl2Esc6pmu3oyE8cuvY2Kwe3Bd4imk9QXTdQWxK5FgaLK4TuuDno8l
s3Oxn/brZlixigRv97GwMuy8kvKb3tL60bNWx+kzkdAgE32+EXts6rxoFvZM
c1/62RORoBlzbbAdu/is0GQm9tYWQ4YZiAS+/QGX+rDL72Faeo39qJakWpti
JGyT9q4Zwy5mQnDRvDDp6N84mUhovea9OoudYjOknoHdiutQkqFYJDD6P/VY
wv4qYzU1HfvHlYKcUYFIeFxFb7+BndX2mw/Nn5lJ2tpwRoKNfxcDw0Xc30Pf
MdDGGVnv21PFEgkO57cvM2KX93Q0pM3LXPJ9Y32DBMUSUkk0XxE5rvkGe7Dw
girfLxLc3T1uRBvH2U8mMBt7V+Hts2wzJJB/025Jj71NLSw3B/u66czFMYIE
fFFfdWg+cyyTnIf9c+fxfcVdJCgTNKGjjTNSK3S6ADtvd7SY12cScFed3EWb
d+tp2VnavnCqq4mJ1ZDg4NAUKxP2NcXshCLs9+/wbsooIUHiQfVzNJ9LVn1I
21+Lax2u89kk4Pz0j0IbJ3HB880H7IxuCq/Xk0i4jxzToPnkx+0zZdgP8Nvt
bo8kwXcPmTM0Lz/PuVqB3ek514HgUBKoa8Rb08b36+2oqcLuJhByCvxI8Kjw
oTUzLbccZc1q7DrUuuvMbiSYc7tnwYY9/8QOjxrs56Pfu/ZcJ4FOTPslDuwU
7XbbWuwimz61pliToIS5hMSF3WOTyirNW/ofRpqZkGAixWo7P/beUkW1OuyX
LAx+DumS4MoBwV9C2A3SgoRpXvR4yw1NFRJ4GL09fwC7lX54PG0cntArWkFy
JJBZNt6ugJ0+buE9bT2/K/+dbRMlwYNt1zUTLxEot/yByGHscvHzmcEfw8B4
4VCQ1RUCCdlA0Ad8fwt6KTHTnfsCXHfpHiy9iu/Pbw89M8TO1R1Qy8j0FL76
vj1Vdx33x2aKzeQQBfg6d86fpQuBGZme1iBHAn0Zubr+BHvTm+4awYtBcGTx
rrHSDQJp9zQ9lMcelz5E97IrEApAKvfVTQLpnmDpHiYokCexkbdYEQC3syTv
/XHG9RMtOx6BnXvr9Ok7Hn4Q9Jv1r9gtAjHevrfJCPukT6dsx9o9WLvW3S94
m0Ab47KtXNiZt7Ds6BPwAoeBrIWtdwgUYemu+32QAmETsa4VJu5g+NZxpQf7
RMPF6AzszIl9Cb8Y3GBH1Vgu2ZVA/b9P3bmL/e09C0b6htvQvKu4XMeNQEOP
iyQNsD9tcVyvznCBnb1W1Z3YlaoHY8WxJ+333fHT7gbMxCkj67sESsqwz6PH
HvxlkC9d3QHS7QSOt2MvSvE5NzpAgShprw88CVehaDRUStGdQPyH7VObsHv2
pfhFGl0B9sZbV2OwG9jR3c3FbmAn1fht22V8bzGpn8G+yeueVQz2aO0KJclD
tkCIXm4/5kGge+Mf0APsDVWiOWYfL0D2YYjwx3698nqnC3bvd+rRNgmWcEmg
ZrYMO6/0AtUG+5YXFZ771sxhLm/AYxE7R1PU3dPYPXz0Uy85m8J/P9Oei3gS
aO9G0GNt7INbBgqLjEyg7jT38knsYXVCIkrYH6imq2+5dRrirn4Rc8Oefc99
swx2Ec130rGap4Bv0glFYg//6Vspin1XufkCi5oBCPEqmpRgz1/wLhLAztve
lv7htB4o/RSyascurnTyIDd2R97hW8qjx2FYnU1zGrv/md6QLdhvPln6qF6l
Bb42rUZ0XgRSzjXazYzdRvaw790cDbiYwZ/CjV3U+18JHfY3zL6OUaNqoNW6
elgC+9WMLUFr/RTwTbNWXnl+DFZTo/0UsQ8kvVhawp5Bjoglko/CLvG0f9rY
JfJtZRexiyZZyMYrKsCSgCj3GewKXE2Bc9gfbmH2ER46BOcim/kvYJfvKnOi
YlcWXTriNSkPhjbPCuyx6zdJl01jdyGXX0yxkQXUtcLlgt33vjvfJHaGKi4P
UyYpKEy5Sbhjz/BWmhjDnudFOWNybD982adF54FdTX6jn+aZRV750bL7IZCH
RZjm+7QbOmneNBOYOyKyH2zCLl+mudYV+xqaJ00dtglh3w8MLZfHaD7Q0h1P
88In9nd2DuwDL++EcU/soyb+pjQfW4p/fyRgH9xWfDHgjd3pv/qGUezSFiqv
JFskwH6cvE5ztQNsVTT/pke6yFkrAZ6O5F33sN87cKaY5iRuz9qNEgmY43e1
pHmAHDWV5q5+jk5jSRJw+eujbzTP4DEKoLkGWzz9tJsETPupNN3HfiOoWvX/
3tyd2yooATn5HhM0f3AUjtC8UjVfgo5bAhzbM5h8sG8Pq5GiOfmLlI4iqwT8
qB3QoHmMbrsAzUMCJB/nL4hDikbOB5qf3Sq4MoL9QbXWx4FGcVD85tdN89Kz
pfM0v+xhx6FQKQ69S8d/0XzpguUUzctnkuTCCsWh4lWGnC/28ra0HpoPZ3Tv
s0gQh8QNrVM0zzh+uo3m7/KEuerCxaEvtt2R5lKkfw00Zy4+/O/QY3F4fcHk
Mc3/1RdW0XzAfGT1tY84IOmP6TTXHHQooblSVyGniKs4/A+xvI7h
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1: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
      "]]}}, 
   {GrayLevel[0], Opacity[0.1], SphereBox[{0, 0, 0}]}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{360., 399.06753703431633`},
  Method->{},
  PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.304369652976069, -0.45829485955471083`, 0.5666630552599493},
  ViewVertical->{0.5343724952241898, 0.40573467965844273`, 
   0.7415021281630512}]], "Output",
 CellChangeTimes->{
  3.716237409891308*^9, 3.716237548143634*^9, 3.716237624681197*^9, 
   3.716237714056858*^9, 3.716237904241671*^9, 3.716237961647437*^9, 
   3.716238294303914*^9, 3.716238452908821*^9, {3.716238590632243*^9, 
   3.7162386061147213`*^9}, 3.7162387245978403`*^9, 3.7162390957994556`*^9, {
   3.7162393361804*^9, 3.716239354818946*^9}, {3.716240987759844*^9, 
   3.716241040293569*^9}, 3.716241123543524*^9, 3.71624117465462*^9, 
   3.716241227704381*^9, 3.716241556396428*^9, 3.716241619795209*^9, {
   3.71624326254574*^9, 3.716243279745845*^9}, 3.716243384906891*^9, 
   3.716243430819907*^9, 3.716286451662436*^9, 3.7162873209994164`*^9, 
   3.716292632995953*^9, 
   3.71633196574962*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlXWmQZUWVvrytXu1V3VW9L9Vb9d40zaKyCiIwNMjSiKAgNEjRTdONQIs0
MtPosHdrSyPNMgpujIHCoDKExCwxTISEMxMhEQaG/zRiwu0HEWrgHi53bp5z
8uTyvrzvvSqcP1ZEvXffvXnz+87Jk5kn9/O3791x3e7te3deu33i7Fu2f3DH
zmtvnTjrpluKW9WjsuyoHcX/oYnMXOdZZj/ob6f5kB9/Rddfpa+B/Jlnnsm/
+c1v5vbv4MGD+vtHP/pRfvfdd+d33nln/vjjj+e//e1vn+W3H5ne28OJ137+
85+bx/kf/vCH/N57782/+93v5n/+85/zZ599Nv/617/eBrTN2zV6rZq/8cYb
xGXv3r1ZhT6r+b59+/LXX39dQvCnF73c68l/9rOf5XfddVf+u9/9jiB/8pOf
EFQBmX2F2T34F4YZKnnvxz/+cX7PPfeQBsyfF4+l98g0Xy+DNfTi9/bv398p
bNnrAxSmlr/yyiv5Sy+9lD/99NPm/Zq8apJcgqqiJCqL/PD0Y7Dgv/nNb+i1
PXv2uFcbxPe+++7Lv/e976mdvfDCC8+GuN29bNVsbj333HPmjaxO9+r5T3/6
0/z+++8nq3riiSdIPwL2qS5f+xa/RhK3KSCelqinpqYkn+XZy/zoi9Gj4jv7
T370BfNVMXcqevUf3qMowiq4928c/PPgUR3c+1cO/jmFa4JA/8KBPquB+vTK
fxS91Q/ufYODP9VBcKOWlzj4kwo3SDdq/ovmWqL9jPmihyMA4J+9QNGjWQog
gT6tN+aA4F/jQP+ggeaBQFxFZE9ooAUg0PMc6HEg+0J90Q9ENxZiLfwTh3tM
wy2iG/UgnI3+OQ78qAZeDuh9mQMdifDMt32D3vXD0Y1JENmXONAjGmgNCPSP
HOhT0SPDeC0IztlMSg0UvIW0/waxWFeiJM6q2WEQ/dGADdvKEKq7KYBfv7/2
2mtUgpowjz76aP7rX//6bxntIYB2DEAbo8/hVMVNgWzl/qtf/Sq/44478h/8
4AcU5sUXX8yffPLJTCA/CSCPBZB9cq+1lu73a2n6K6uNqXQrqhFD6+WXX87/
+Mc/Uphf/OIXFG9BObuTqR3CyXicpt9siausGm4IbxO/UUNL/KHobwGijwhM
WbVrxfr973+fP/bYY/n3v/99Eu3555/PDx8+nP/pT3+ysJ8AsG8DsMMSZVmF
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
5gyQnQuyreglc+lT1YJyA+C2AFhIlConlJQOm30mLZZykgL2KeCiUoNYptBE
+yRgENxeyf4Gp8TJAHJxKeREmOQIUvyHczDkKQrZq5BLQ0hSq5MtKtROVisT
oLMjjZvvKR6Ayk5W63ZoE4qGCvuloU5PAQLyRN3srERKG1wy7KbB6AMqXlbK
YImqmHIpGlJa4zNoMfj1cTVSXNGvhtZ1LgEo3PL2hJxKTo4ITenc5eydJYRI
8qaWJ42QBj1dGdIgO3DpUUHgufV2VzODM0GiyHW2ToH6lUYN0FilNCaANhal
DBMNJK5kVu9ImIpRnVPOoLKqAFaTHbKid9E80RVpLq0aGvFtyIBYl8oRWh3a
c0RoVAk1UwpDJHlSf3ZGCUmnsFG9inS1NqRGhjTK2i1o9IS6IixvRUHGpjTt
fpzy0Z/1oiuTJ8XFY13JvVY9rw2zaaTnYRWrEZYbaJx8KQs4SV9vwsxdKOWr
dnDYOVXic7jSp7ha116sujY6otSKSh8a9u5+eWLF18bMu5h4Qk/LTD16dYOK
7campLteCmevTCyu1ofKIQMmlTTU0XAF8ukRsICPJrTSZvQy0sr0JjjjAQqk
hYpKWvdygTUDZ0dRi2iuBH5lzwK91wPsiMrUHlWVs6N3qv3a2XTdrtA8KlTU
X2iKNjHZFBd5znEv7lX1qe1Kt5W++TXOZlMoqpnST9X1Jmn3ptWTM7OzQIEy
UKK7MsuJdPfmTy6vpdRWU7VV9OnRejXGpWmhLKn2jH2ZX73luqv6ustqqjM0
6dyuG+x2jWygs2nMiC8ZMHUKGFFFNdhurHqqmm0p01VB/uvVomootJy6WtM5
QB82BaexcldUslrke5Pm6tdUJSS0m+rQ1HvH6NWIqkRK5eIKzTUbCFXiTASp
xBLrblGxlNwnYamo82SzJvSQSnWq3htWWeoqyyCQpV8NvxpenR1BSxVol+h2
umxZBDmxRBCXAIMqyGkqyKAK0lBBhjoUpOIEwTmGJ/hKVx8OQhS3KJ0Bpfh2
pd0PKI5oBnLWUguJbQXWMtsjhKbyE5tjlU2/sjld2fSGbOhqFlBYX2jF1cir
N2iIITtoGeqxcpOMHMM+jrtgeIbeayqvHtXXGGDYG+qLip7zVTNCJNFThPx1
undcSI2U9w5VXiOkRlfjmpR9qRrWalL0ZwHPAyTYRcnK+pZ6VIV+ghY8z9R7
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
+odbk/6v4To76v8Akpzgsw==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final Positions", "Subsection",
 CellChangeTimes->{{3.7162270404667263`*^9, 3.716227042718824*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"final", "=", "400"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"finalpositions", "=", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"y", "[", "final", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", "k"}], "-", "1"}], "]"}], "]"}], "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"y", "[", "final", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", "*", "k"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"y", "[", "final", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"2", "*", "k"}], "-", "1"}], "]"}], "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"y", "[", "final", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", "*", "k"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"y", "[", "final", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", "*", "k"}], "-", "1"}], "]"}], "]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "dgt"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"m3", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"finalpositions", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "0.02", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"m2", ",", "m3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7162270331345243`*^9, 3.716227033135549*^9}, {
  3.716236867926591*^9, 3.7162368752093353`*^9}, {3.7162369064972677`*^9, 
  3.716236944735701*^9}, {3.716237046634235*^9, 3.7162372212499113`*^9}, {
  3.7162390259714613`*^9, 3.716239057966*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0], Opacity[0.1], SphereBox[{0, 0, 0}]}, 
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[0.02], 
    Point3DBox[{{
     0.49181909900069154`, -0.8706973912212013, -0.00016364211669487745`}, {
     0.00006238840246411377, 
     0.00026361460676716734`, -0.9999999633075125}, \
{-0.00014851304908791328`, -0.00022655870715553806`, 
     0.9999999633075125}, {-0.8706948537132662, -0.49182357145434413`, \
-0.00021512584137781127`}, {-0.49179044903438873`, 0.8707135737185466, 
     0.00016364849976989527`}, {0.8707161266846308, 0.49178590916671505`, 
     0.00021511945830404242`}}]}},
  Axes->True,
  ImageSize->{360., 399.06753703431633`},
  PlotRange->1,
  ViewPoint->{0.0923289029554546, -2.3793427136344514`, 2.40420540402722},
  ViewVertical->{-0.26351282820547817`, 0.11677411820291372`, 
   0.9575619012309764}]], "Output",
 CellChangeTimes->{
  3.7162369153253717`*^9, 3.716236946263277*^9, {3.71623707794386*^9, 
   3.716237095115226*^9}, {3.716237158753414*^9, 3.716237222109704*^9}, 
   3.7162377210378513`*^9, 3.7162385608947678`*^9, 3.716238729402687*^9, {
   3.71623903068506*^9, 3.7162390585461893`*^9}, 3.716239095890085*^9, {
   3.716239336279459*^9, 3.716239354927659*^9}, {3.716240987903831*^9, 
   3.716241040409709*^9}, 3.7162411238945303`*^9, 3.7162411749432297`*^9, 
   3.716241227889923*^9, 3.7162415565985317`*^9, 3.716241620197364*^9, {
   3.7162432628854094`*^9, 3.7162432798953648`*^9}, 3.7162433849970703`*^9, 
   3.716243430943112*^9, 3.716286452005377*^9, 3.716287321337249*^9, 
   3.7162926330437202`*^9, 
   3.716331966323883*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
/B9Ywrt3\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coulomb Dimensionless Energy", "Subsection",
 CellChangeTimes->{3.7162287566158857`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"i", "\[NotEqual]", "j"}], ",", 
     RowBox[{
      RowBox[{"1", "/", "2"}], " ", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"finalpositions", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"finalpositions", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ")"}], ".", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"finalpositions", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", 
             RowBox[{"finalpositions", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}], "]"}], "]"}], 
        "]"}]}]}], ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716228759394573*^9, 3.7162288130282507`*^9}, 
   3.716228923984185*^9, {3.7162289725427732`*^9, 3.7162289830009537`*^9}, {
   3.716236831717683*^9, 3.716236841707652*^9}, {3.716237241639905*^9, 
   3.716237322898354*^9}}],

Cell[BoxData["9.98528137629807065680493245109791490993`9.387735988492405"], \
"Output",
 CellChangeTimes->{
  3.71622892522689*^9, {3.7162289768999977`*^9, 3.716228987328041*^9}, 
   3.716229048416732*^9, 3.716229101271735*^9, 3.716229312372161*^9, 
   3.716229383537704*^9, 3.716236011725439*^9, 3.716236802464684*^9, 
   3.71623684308611*^9, {3.716237267032617*^9, 3.716237323960012*^9}, 
   3.7162377637660313`*^9, 3.716238561093638*^9, 3.716238743022993*^9, {
   3.7162390711242857`*^9, 3.716239095922278*^9}, {3.716239336311919*^9, 
   3.716239354965579*^9}, {3.716240988048047*^9, 3.716241040545219*^9}, 
   3.7162411239322853`*^9, 3.71624117498517*^9, 3.716241228033695*^9, 
   3.716241556655233*^9, 3.716241620338764*^9, {3.7162432635192966`*^9, 
   3.7162432799331827`*^9}, 3.7162433850312357`*^9, 3.71624343098025*^9, 
   3.716286452061709*^9, 3.716287321406328*^9, 3.716292633068673*^9, 
   3.7163319663557577`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polyhedron", "Subsection",
 CellChangeTimes->{{3.716228714961113*^9, 3.716228717395649*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EdgeForm", "[", "Red", "]"}], ",", "Red", ",", 
     RowBox[{"Specularity", "[", 
      RowBox[{"White", ",", "5"}], "]"}], ",", 
     RowBox[{"Polygon", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"finalpositions", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "@", "finalpositions"}], "]"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162271226531477`*^9, 3.71622712265449*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[1, 0, 0], EdgeForm[RGBColor[1, 0, 0]], Specularity[
    GrayLevel[1], 5], Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGAQAWJmKL6XUnDhW+V9eyG7hmMH7rzen61qLPK6SHX/k/RT
0y9ECdj3JaTI7nAztL/H6vvm///3+wvqNyW4livvl08/UcmzSXc/VNyeVHO2
nNMv2Q1Ud1p88yTOqvv7mWL4X+QY6ewn1ZyM+UeX1lXe3/9/b+a2R3de28u+
2/VCsViVZPcs2sUm+AKov8pHYXY2UJ+/e4ewmZEOTnNwhQOp/sJlDqn+wmUO
qf7C5X5S3YPLHFLdg8teXOaQmm5xuZNUc3C5k1RzSPUXqfFFqjmkuofU+CI1
XnCZT6o5pLqHVH+R6n5c5gAAzD/wKw==
    "]]},
  Axes->True,
  Boxed->True,
  ImageSize->{360., 400.46467920299705`},
  ViewPoint->{2.230304160139037, 2.1771590873890037`, 1.3174678976984604`},
  ViewVertical->{0.7671788938554731, 
   0.6488240533266754, -0.48439891449055283`}]], "Output",
 CellChangeTimes->{{3.716227125008106*^9, 3.7162272245736027`*^9}, 
   3.716227276762722*^9, {3.716227377260132*^9, 3.716227396334474*^9}, {
   3.716227468421439*^9, 3.7162274921908083`*^9}, {3.71622769026364*^9, 
   3.716227715742985*^9}, 3.716227771509007*^9, 3.716228175211046*^9, {
   3.7162282603468943`*^9, 3.7162282809229116`*^9}, 3.716228485435307*^9, 
   3.7162290484764023`*^9, 3.716229101326787*^9, 3.7162293124305773`*^9, 
   3.7162293835867*^9, 3.716236011817245*^9, 3.716236802522258*^9, 
   3.716238561198141*^9, 3.7162390959708757`*^9, {3.7162393363596563`*^9, 
   3.7162393550306473`*^9}, {3.716240988094591*^9, 3.716241040594503*^9}, 
   3.716241124030837*^9, 3.71624117507765*^9, 3.716241228132818*^9, 
   3.716241556805212*^9, 3.716241620478615*^9, {3.716243263571656*^9, 
   3.716243279965743*^9}, 3.716243385078053*^9, 3.7162434310467243`*^9, 
   3.716286452124497*^9, 3.7162873218818493`*^9, 3.716292633105983*^9, 
   3.716331966422545*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dipole Moment", "Subsection",
 CellChangeTimes->{{3.716229034320875*^9, 3.7162290364799767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dipolemoment", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"finalpositions", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"Norm", "[", "dipolemoment", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.716229038765369*^9, 3.716229038766726*^9}, {
   3.716239246105208*^9, 3.716239318670226*^9}, {3.716239369309648*^9, 
   3.716239426504925*^9}, 3.716239540639598*^9, {3.716239579594577*^9, 
   3.716239666750387*^9}, 3.7162397425507393`*^9, {3.716239941733135*^9, 
   3.716239949504471*^9}, {3.716240965628044*^9, 3.716240969061318*^9}, 
   3.716244346326675*^9}],

Cell[BoxData["0.000039410390928725776`"], "Output",
 CellChangeTimes->{
  3.716239595650569*^9, {3.71623963273608*^9, 3.716239663189062*^9}, 
   3.716239744255785*^9, {3.716239942325306*^9, 3.716239950032399*^9}, 
   3.716240067377647*^9, {3.716240970016519*^9, 3.7162410406220827`*^9}, 
   3.716241124053955*^9, 3.716241175100617*^9, 3.71624122815454*^9, 
   3.716241556829401*^9, 3.716241620504414*^9, {3.71624326364708*^9, 
   3.716243279993902*^9}, 3.716243385098278*^9, 3.716243431078743*^9, 
   3.7162443469220963`*^9, 3.716286452168503*^9, 3.7162873219033203`*^9, 
   3.7162926331223583`*^9, 3.716331966464924*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interpolating functions", "Subsection",
 CellChangeTimes->{{3.7163167204152*^9, 3.7163167249700747`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datapaper", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0.50000000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1.73205081"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3.67423461"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6.47469149"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9.98528137"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "14.45297741"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "19.67528786"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "25.75998653"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "32.71694946"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "40.59645051"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "49.16525306"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "58.85323061"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "69.30636330"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "80.67024411"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "92.91165530"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "106.05040483"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "120.08446745"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "135.08946756"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "150.88156833"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "167.64162240"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "185.28753615"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "203.93019066"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "223.34707405"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "243.81276030"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "265.13332632"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "287.30261503"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "310.49154236"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "334.63443992"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "359.60394590"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"31", ",", "385.53083806"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"32", ",", "412.26127465"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "440.20405745"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"34", ",", "468.90485328"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dataprogram", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "0.500000000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1.7320508076"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3.67423461"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6.474691495"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9.98528137"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "14.452977431"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "19.67539562"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "25.75999330"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "32.7169774"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "40.59670773"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "49.1652531"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "58.85329068"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "69.3068842"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "80.67071383"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "92.9123854"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "106.05071369"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "120.0848708"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "135.09079279"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "150.882827316"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "167.6419753"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "185.2885181"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"23", ",", "203.9320202"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "223.3487659"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "243.8143661"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "265.1354032"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "287.3033539"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "310.4928308"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "334.6381400"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "359.6070077"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"31", ",", "385.5330279"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"32", ",", "412.2612747"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"33", ",", "440.2062345"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"34", ",", "468.9091069"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.716539262376845*^9, 3.716539262378077*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dot1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"datapaper", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Number of charges\>\"", ",", "\"\<Energy (dimensionless)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Coulomb energies for different numbers of charges (Erber and \
Hockney)\>\""}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "11"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], "\n", 
 RowBox[{"dot2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"dataprogram", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Number of charges\>\"", ",", "\"\<Energy (dimensionless)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Coulomb energies for different numbers of charges\>\""}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "11"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"fitpaper", "[", "x_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Fit", "[", 
    RowBox[{"datapaper", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x", ",", 
       RowBox[{"x", "^", "2"}], ",", 
       RowBox[{"x", "^", "3"}], ",", 
       RowBox[{"x", "^", "4"}]}], "}"}], ",", "x"}], "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"fitprogram", "[", "x_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Fit", "[", 
    RowBox[{"dataprogram", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "x", ",", 
       RowBox[{"x", "^", "2"}], ",", 
       RowBox[{"x", "^", "3"}], ",", 
       RowBox[{"x", "^", "4"}]}], "}"}], ",", "x"}], "]"}], "]"}]}], "\n", 
 RowBox[{"plotpaper", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"fitpaper", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2", ",", "42"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Number of charges\>\"", ",", "\"\<Energy (dimensionless)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Best fit Coulomb energies (Erber and Hockney)\>\""}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "11"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}]}], "\n", 
 RowBox[{"plotprogram", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"fitprogram", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2", ",", "42"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Number of charges\>\"", ",", "\"\<Energy (dimensionless)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Best fit Coulomb energies\>\""}], 
    ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "11"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.716539280387581*^9, 3.716539280389235*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0.5, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
    1.6], 
    StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQUOEOqBPYTmcMiL/f+iattvKF/AQcmhTvZqCi9U
nYiD09clbaLPJKF8CQcllt1nyn4oQ/kyDtt7Ny9/81wHyldw+Cnqter+GmMo
X8lB6YB2Vd8hSyhfxeHuqZ//j0Q7QPlqDt8EWmsjfFygfA2HE4oqzOpTPaB8
LYctn+RWmuX6Qvk6DqU9F0pmBwdC+XoOEUa97k+1QqB8A4eMdRX9EVbhUL6h
g6uU3lXL5igo38jh2RXNV+mscVC+sYNEh9DrO48SoHwTB6fAk+dM7yRB+aYO
hjybtTu+pED5Zg5xosz1xprpUL65w5XvxvJHajOhfAsHr4Oc1tKvs6F8S4fp
9Y8VmaryoHwrh87G41JKkwqgfGsH3km3m65/KYTybRyO97RG300vhvJtHa5Y
Va5Se1UC5ds53BLQPbyysgzKt3c4uIknoE6iAsp3cEi6EKynd6QSwm9wcBBd
su+ic3M1VN7RoeRKnnuVX60DAFa9hCs=
      "]],
     FontFamily->"Helvetica"]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 11, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Energy (dimensionless)\"", TraditionalForm], None}, {
     FormBox["\"Number of charges\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{523., Automatic},
  Method->{},
  PlotLabel->FormBox[
   "\"Coulomb energies for different numbers of charges (Erber and \
Hockney)\"", TraditionalForm],
  PlotRange->{{0, 34.}, {0, 468.90485328}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.716539336789393*^9}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0, 1, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
    1.6], 
    StyleBox[PointBox[CompressedData["
1:eJwtylsoAwAUxvHFyANNrqMJI2ytDdtch29RRpt7qSmxpiW5SzYsJcSWB0WK
xLxIlJqESVpIyMryggdJc9lKyoNLCu2cOv37dU68pr2qyYfBYMT/7X9p4M1d
gbcBEHWonwxb3+RgcGGMudIG0V8YjDdfo+GuKDIbXKbtvPcjgcyB5E234nkU
kOPwbRfvutbEZC5u1g/ck/ZsciJUA+qXozqQk9DskLkblEXkFDADDL7J0woy
H12l/ktZrSqyAKLVxZ/l6kqyEGcS66eHX0NORdGMbUSbU0tOwxzD8pA/rCan
Y3X2daTNr54shu6j+PjxvoEswXhxSCxuNWQp7k5PWKZ3LTkDNn35RC5PR87E
4bE/xznYTM7C9kV0JM/dQs5GqMNYwjK0kXPQuGea5091kHPh1C+MX793kmXQ
jJkt97puch4qHkoupS895Hzs7G+qtvS95AJsNBUqxth9ZKBO1igUHuq9HgKe
A817yuF+ussRIV+3msoG8QuQ9Yfz
      "]],
     FontFamily->"Helvetica"]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 11, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Energy (dimensionless)\"", TraditionalForm], None}, {
     FormBox["\"Number of charges\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{507., Automatic},
  Method->{},
  PlotLabel->FormBox[
   "\"Coulomb energies for different numbers of charges\"", TraditionalForm],
  PlotRange->{{0, 34.}, {0, 468.9091069}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.716539337186344*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
2kbhPxM4QKQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  BaseStyle->{FontSize -> 11, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Energy (dimensionless)\"", TraditionalForm], None}, {
     FormBox["\"Number of charges\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{493., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"Best fit Coulomb energies (Erber and Hockney)\"", TraditionalForm],
  PlotRange->{{2, 42}, {0., 730.9480717233317}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.716539339476172*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
ZkQ9AA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  BaseStyle->{FontSize -> 11, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Energy (dimensionless)\"", TraditionalForm], None}, {
     FormBox["\"Number of charges\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{498., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"Best fit Coulomb energies\"", TraditionalForm],
  PlotRange->{{2, 42}, {0., 730.9537873870988}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.716539339599719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"error", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N", "[", "k", "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"datapaper", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"dataprogram", "[", 
         RowBox[{"[", 
          RowBox[{"k", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "2", ",", "33"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.716539304027508*^9, 3.716539304029212*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.3999999765322855`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "5.000000413701855`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.099999996119095`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.`", ",", "0.00010775999999879105`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "6.770000002376264`*^-6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "0.000027939999995396647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "0.0002572200000017233`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11.`", ",", "4.000000330961484`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.`", ",", "0.00006007000000352036`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.`", ",", "0.0005208999999979369`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.`", ",", "0.0004697199999981194`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15.`", ",", "0.0007300999999984015`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16.`", ",", "0.00030885999998986335`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.`", ",", "0.00040334999999913634`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18.`", ",", "0.0013252299999919614`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.`", ",", "0.001258986000010509`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20.`", ",", "0.0003529000000241922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21.`", ",", "0.0009819500000105563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22.`", ",", "0.0018295400000170048`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23.`", ",", "0.0016918499999860614`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24.`", ",", "0.0016057999999929962`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.`", ",", "0.0020768800000041665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26.`", ",", "0.0007388699999637538`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27.`", ",", "0.0012884399999961715`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28.`", ",", "0.0037000800000441814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29.`", ",", "0.0030618000000117718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30.`", ",", "0.0021898399999713547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31.`", ",", "4.999998282073648`*^-8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32.`", ",", "0.0021770500000002357`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"33.`", ",", "0.004253619999985858`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.716539377710309*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ploterror", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"error", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Number of charges\>\"", ",", 
       "\"\<|\\!\\(\\*SubscriptBox[\\(E\\), \\(Erber\\)]\\)(N)-E(N)|\>\""}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Error\>\""}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "11"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7165393201454687`*^9, 3.716539320147003*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
    1.6], 
    StyleBox[PointBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQDQUOQPxg+VwVOwiXw4EBBQiA+f2VplB5ETR5CRB/
QX5PGFReBsjn2LLMXsYewlcA8h3yrFPvQOWVQOr1xHz+QvkqQP6zmvzbBlD1
alD7UqHyGkD+g+rSOn6ovBaQX2K9QNARytcB8s9wzjhhB+XrAfk7zre+cYfy
DYD8iJnnbU2gfEMgX4BfPN8KyjcC8uc9yNoWCuUbA/l9byYuCIHyTYD8iq9r
FcyhfFMgf9eJGWIBUL4ZyH1zl/6MhfLNgfw7Uko7oqF8CyD/xzwz/ygo3xLI
31DawZwI5VsB+QZ24mYeUL41kJ/zSloG5h4bkP6ghf55UL4tkL8vml80E8q3
A/LvpeZ+gJlnDw6/T9ezoOHnAOSvuDjrKlS+AcRflGOXU2gPAFWXWhE=
      "]],
     FontFamily->"Helvetica"]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 11, FontFamily -> "Helvetica"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(E\\), \\(Erber\\)]\\)(N)-E(N)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Number of charges\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{542., Automatic},
  Method->{},
  PlotLabel->FormBox["\"Error\"", TraditionalForm],
  PlotRange->{{0, 33.}, {0, 0.004253619999985858}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.716539379375374*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 704},
WindowMargins->{{-10, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 2, 93, "Title"],
Cell[705, 26, 1830, 36, 105, "Input"],
Cell[CellGroupData[{
Cell[2560, 66, 107, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2692, 71, 4213, 119, 275, "Input"],
Cell[6908, 192, 8742, 146, 414, 846, 16, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15699, 344, 163, 2, 45, "Subsection"],
Cell[15865, 348, 10642, 268, 583, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26544, 621, 97, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[26666, 626, 3042, 84, 121, "Input"],
Cell[29711, 712, 73223, 1215, 414, 62060, 1031, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[102983, 1933, 105, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[103113, 1938, 2402, 68, 143, "Input"],
Cell[105518, 2008, 9674, 163, 414, 885, 18, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[115241, 2177, 94, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[115360, 2182, 1271, 33, 55, "Input"],
Cell[116634, 2217, 926, 14, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[117609, 2237, 98, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[117732, 2242, 773, 20, 55, "Input"],
Cell[118508, 2264, 1703, 30, 415, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120260, 2300, 103, 1, 45, "Subsection"],
Cell[CellGroupData[{
Cell[120388, 2305, 762, 17, 55, "Input"],
Cell[121153, 2324, 621, 9, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121823, 2339, 111, 1, 45, "Subsection"],
Cell[121937, 2342, 5143, 141, 275, "Input"],
Cell[CellGroupData[{
Cell[127105, 2487, 3940, 103, 297, "Input"],
Cell[131048, 2592, 1728, 43, 357, "Output"],
Cell[132779, 2637, 1699, 42, 356, "Output"],
Cell[134481, 2681, 3636, 72, 348, "Output"],
Cell[138120, 2755, 3606, 71, 351, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141763, 2831, 590, 17, 32, "Input"],
Cell[142356, 2850, 2712, 68, 131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145105, 2923, 810, 19, 55, "Input"],
Cell[145918, 2944, 1613, 41, 372, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
